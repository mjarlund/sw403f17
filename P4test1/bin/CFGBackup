Program -> Statement Statements $
Statements -> Statement Statements
Statements -> EPSILON
Statement -> DeclarationStatement
Statement -> ExpressionStatement
Statement -> SelectionStatement
Statement -> IterationStatement
DeclarationStatement -> Type Identifier BuildVarDCL DeclarationStatementPrime
DeclarationStatement -> ListDeclarationStatement
DeclarationStatementPrime -> FormalParameterList BuildBlock Block end Identifier BuildFuncDcl CombineDown
DeclarationStatementPrime -> is Expression BuildAssign CombineDown
DeclarationStatementPrime -> EPSILON
ListDeclarationStatement -> list of Type Identifier is ParameterList
FormalParameter -> Type Identifier
FormalParameterList -> ( FormalParameterListBody ) BuildFormalParams
FormalParameterListBody -> FormalParameter FormalParameterListBodyPrime
FormalParameterListBody -> EPSILON
FormalParameterListBodyPrime -> , FormalParameterListBody
FormalParameterListBodyPrime -> EPSILON
Expression -> AssignmentExpressionPrime AssignmentExpression
AssignmentExpression -> is AssignmentExpressionPrime BuildAssign AssignmentExpression
AssignmentExpression -> EPSILON
AssignmentExpressionPrime -> NotExpressionPrime NotExpression
NotExpression -> not NotExpressionPrime BuildBoolExpr NotExpression
NotExpression -> EPSILON
NotExpressionPrime -> OrExpressionPrime OrExpression
OrExpression -> or OrExpressionPrime BuildBoolExpr OrExpression
OrExpression -> EPSILON
OrExpressionPrime -> AndExpressionPrime AndExpression
AndExpression -> and AndExpressionPrime BuildBoolExpr AndExpression
AndExpression -> EPSILON
AndExpressionPrime -> EqualityExpressionPrime EqualityExpression
EqualityExpression -> equals EqualityExpressionPrime BuildBoolExpr EqualityExpression
EqualityExpression -> EPSILON
EqualityExpressionPrime -> RelationalExpressionPrime RelationalExpression
RelationalExpression -> below RelationalExpressionPrime BuildBoolExpr RelationalExpression
RelationalExpression -> above RelationalExpressionPrime BuildBoolExpr RelationalExpression
RelationalExpression -> EPSILON
RelationalExpressionPrime -> AdditiveExpressionPrime AdditiveExpression
AdditiveExpression -> + AdditiveExpressionPrime BuildBinaryExpr AdditiveExpression
AdditiveExpression -> - AdditiveExpressionPrime BuildBinaryExpr AdditiveExpression
AdditiveExpression -> EPSILON
AdditiveExpressionPrime -> PrimaryExpression MultiplicativeExpression
MultiplicativeExpression -> * PrimaryExpression BuildBinaryExpr MultiplicativeExpression
MultiplicativeExpression -> / PrimaryExpression BuildBinaryExpr MultiplicativeExpression
MultiplicativeExpression -> EPSILON
PrimaryExpression -> Identifier BuildIdentifier IdentifierAppendantOptional
PrimaryExpression -> IntegerLiteral BuildValExpr
PrimaryExpression -> FloatingPointLiteral BuildValExpr
PrimaryExpression -> StringLiteral BuildValExpr
PrimaryExpression -> BooleanLiteral BuildValExpr
PrimaryExpression -> ( Expression )
ExpressionStatement -> Identifier BuildIdentifier ExpressionStatementPrime
ExpressionStatementPrime -> ExpressionStatementPrimePrime is Expression BuildAssign CombineDown
ExpressionStatementPrime -> ParameterList BuildFuncCall CombineDown
ExpressionStatementPrimePrime -> .Identifier
ExpressionStatementPrimePrime -> EPSILON
Parameter -> Identifier
Parameter -> IntegerLiteral
Parameter -> FloatingPointLiteral
Parameter -> StringLiteral
Parameter -> BooleanLiteral
IdentifierAppendantOptional -> ParameterList BuildFuncCall
IdentifierAppendantOptional -> [ IntegerLiteral ]
IdentifierAppendantOptional -> EPSILON
ParameterList -> ( ParameterListBody ) BuildActualParams
ParameterListBody -> Parameter ParameterListBodyPrime
ParameterListBody -> EPSILON
ParameterListBodyPrime -> , ParameterListBody
ParameterListBodyPrime -> EPSILON
SelectionStatement -> if Condition BuildBlock Block BuildIfStmt SelectionStatementPrime CombineDown
SelectionStatementPrime -> else BuildBlock Block BuildElseStmt CombineDown end else if
SelectionStatementPrime -> end if
IterationStatement -> until Condition BuildBlock Block BuildUntilStmt end until CombineDown
IterationStatement -> foreach ( FormalParameter in Parameter ) BuildBlock Block end foreach
Condition -> ( Expression )
Block -> Statements
Type -> text
Type -> number
Type -> fraction
Type -> character
Type -> boolean
Type -> void
Type -> StructSpecifier
StructSpecifier -> struct Identifier StructSpecifierPrime
StructSpecifierPrime -> StructDeclaration end Identifier
StructSpecifierPrime -> EPSILON
StructDeclaration -> DeclarationStatement StructDeclaration
StructDeclaration -> EPSILON